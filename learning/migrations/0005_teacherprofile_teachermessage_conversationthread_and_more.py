# Generated by Django 4.2.7 on 2025-09-15 07:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('learning', '0004_notificationtemplate_notificationsettings_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='TeacherProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, help_text='Brief introduction for parents')),
                ('specialization', models.CharField(blank=True, help_text='Teaching specialization/expertise', max_length=100)),
                ('years_experience', models.PositiveIntegerField(default=0)),
                ('allow_parent_messages', models.BooleanField(default=True)),
                ('response_time_hours', models.PositiveIntegerField(default=24, help_text='Expected response time in hours')),
                ('preferred_contact_time', models.CharField(blank=True, help_text="e.g., 'Weekdays 9AM-5PM'", max_length=100)),
                ('office_location', models.CharField(blank=True, max_length=100)),
                ('office_hours', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(limit_choices_to={'userprofile__role': 'teacher'}, on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TeacherMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('message_type', models.CharField(choices=[('inquiry', 'General Inquiry'), ('progress', 'Progress Discussion'), ('behavior', 'Behavior Discussion'), ('homework', 'Homework/Assignment'), ('attendance', 'Attendance Issue'), ('suggestion', 'Suggestion/Feedback'), ('meeting', 'Meeting Request'), ('other', 'Other')], default='inquiry', max_length=20)),
                ('content', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('replied', 'Replied'), ('resolved', 'Resolved')], default='sent', max_length=10)),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='learning.teachermessage')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_teacher_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_teacher_messages', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(help_text='The student this message is about', limit_choices_to={'userprofile__role': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='discussed_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConversationThread',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('last_message_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('participants', models.ManyToManyField(related_name='conversation_threads', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(limit_choices_to={'userprofile__role': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='conversation_threads_about', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_message_at'],
            },
        ),
        migrations.CreateModel(
            name='TeacherAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_available', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, help_text='Special notes about availability')),
                ('teacher', models.ForeignKey(limit_choices_to={'userprofile__role': 'teacher'}, on_delete=django.db.models.deletion.CASCADE, related_name='availability_schedule', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['day_of_week', 'start_time'],
                'unique_together': {('teacher', 'day_of_week', 'start_time')},
            },
        ),
        migrations.CreateModel(
            name='TeacherAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(choices=[('basic', 'Basic Digital Literacy'), ('computer', 'Computer Basics'), ('internet', 'Internet Basics'), ('mobile', 'Mobile Usage'), ('safety', 'Digital Safety')], max_length=20)),
                ('class_name', models.CharField(help_text="e.g., 'Grade 5A', 'Beginner Digital Literacy'", max_length=50)),
                ('is_class_teacher', models.BooleanField(default=False, help_text='Is this teacher the main class teacher?')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('teacher', models.ForeignKey(limit_choices_to={'userprofile__role': 'teacher'}, on_delete=django.db.models.deletion.CASCADE, related_name='teacher_assignments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('teacher', 'subject', 'class_name')},
            },
        ),
    ]
